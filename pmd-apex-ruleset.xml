<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="https://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
    name="Default ruleset used by the CodeClimate Engine for Salesforce.com Apex"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>Default ruleset used by the Code Climate Engine for Salesforce.com Apex</description>
    <exclude-pattern>.*/.sfdx/.*</exclude-pattern>
    <exclude-pattern>.*/default/.*</exclude-pattern>
    <include-pattern>.*..cls</include-pattern>
    <!-- COMPLEXITY -->
    <rule ref="category/apex/design.xml/ExcessiveClassLength" message="Avoid really long classes (lines of code)">
        <properties>
            <property name="minimum" value="1000" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/ExcessiveParameterList" message="Avoid long parameter lists">
        <properties>
            <property name="minimum" value="4" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/ExcessivePublicCount" message="This class has too many public methods and attributes">
        <properties>
            <property name="minimum" value="25" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssConstructorCount" message="The constructor has an NCSS line count of {0}">
        <properties>
            <property name="minimum" value="20" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssMethodCount" message="The method {0}() has an NCSS line count of {1}">
        <properties>
            <property name="minimum" value="60" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssTypeCount" message="The type has an NCSS line count of {0}">
        <properties>
            <property name="minimum" value="700" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/TooManyFields" message="Too many fields">
        <properties>
            <property name="maxfields" value="20" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts" message="Deeply nested if..else statements are hard to read">
        <properties>
            <property name="problemDepth" value="4" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/CognitiveComplexity">
        <properties>
            <property name="classReportLevel" value="50" />
            <property name="methodReportLevel" value="15" />
        </properties>
    </rule>
    <!-- PERFORMANCE -->
    <rule ref="category/apex/performance.xml/OperationWithLimitsInLoop"/>
    <rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap" message="Avoid directly accessing Trigger.old and Trigger.new"/>
    <rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" message="Avoid logic in triggers"/>
    <rule ref="category/apex/bestpractices.xml/AvoidGlobalModifier" message="Avoid using global modifier"/>
    <rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations"/>
    <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's"/>
    <!-- NAMING -->
    <rule ref="category/apex/codestyle.xml/ClassNamingConventions" message="Class names should begin with an uppercase character"/>
    <rule ref="category/apex/codestyle.xml/MethodNamingConventions" message="Method name does not begin with a lower case character."/>
    <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" message="Classes should not have non-constructor methods with the same name as the class"/>
    <rule ref="category/apex/codestyle.xml/FieldNamingConventions" message="The {0} field name {1} doesn't match ?Case">
        <properties>
            <property name="enumConstantPattern" value="[A-Z][A-Z0-9_]*" />
            <property name="constantPattern" value="[A-Z][A-Z0-9_]*"/>
            <property name="finalPattern" value="[A-Z][A-Z0-9_]*" />
            <property name="staticPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="instancePattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule>
    <rule ref="category/apex/codestyle.xml/FormalParameterNamingConventions"/>
    <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions">
        <properties>
            <property name="finalLocalPattern" value="[A-Z][a-zA-Z0-9_]*"/>
            <property name="localPattern" value="[a-z][a-zA-Z0-9]*"/>
        </properties>
    </rule>
    <rule ref="category/apex/codestyle.xml/PropertyNamingConventions"/>
    <!-- TESTS -->
    <rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage"/>
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation"/>
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts" message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call"/>
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue" message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests"/>
    <!-- SECURITY -->
    <rule ref="category/apex/security.xml/ApexSharingViolations" message="Apex classes should declare a sharing model if DML or SOQL is used"/>
    <rule ref="category/apex/security.xml/ApexInsecureEndpoint" message="Apex callouts should use encrypted communication channels"/>
    <rule ref="category/apex/errorprone.xml/ApexCSRF"/>
    <rule ref="category/apex/security.xml/ApexOpenRedirect" message="Apex classes should safely redirect to a known location"/>
    <rule ref="category/apex/security.xml/ApexSOQLInjection" message="Apex classes should escape variables merged in DML query"/>
    <rule ref="category/apex/security.xml/ApexXSSFromURLParam" message="Apex classes should escape Strings obtained from URL parameters"/>
    <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings"/>
    <rule ref="category/apex/security.xml/ApexBadCrypto" message="Apex Crypto should use random IV/key"/>
    <rule ref="category/apex/security.xml/ApexCRUDViolation" message="Validate CRUD permission before SOQL/DML operation"/>
    <rule ref="category/apex/security.xml/ApexDangerousMethods" message="Calling potentially dangerous method"/>
    <rule ref="category/apex/security.xml/ApexSuggestUsingNamedCred" message="Consider using named credentials for authenticated callouts"/>
    <!-- BRACES -->
    <rule ref="category/apex/codestyle.xml/IfStmtsMustUseBraces" message="Avoid using if statements without curly braces"/>
    <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" message="Avoid using 'while' statements without curly braces"/>
    <rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" message="Avoid using 'if...else' statements without curly braces"/>
    <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" message="Avoid using 'for' statements without curly braces"/>
    <!-- EMPTY -->
    <rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks"/>
    <rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements"/>
    <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements"/>
    <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks"/>
    <rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements."/>
    <!-- STYLE -->
    <rule ref="category/apex/codestyle.xml/OneDeclarationPerLine"/>
    <!-- Visual Force -->
    <rule ref="category/visualforce/security.xml/VfCsrf"/>
    <rule ref="category/visualforce/security.xml/VfUnescapeEl"/>
</ruleset>