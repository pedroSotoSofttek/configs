<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="quickstart"
xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
    <description>Quickstart configuration of PMD for Salesforce.com Apex. Includes the rules that are most likely to apply everywhere.</description>
    <!-- COMPLEXITY -->
    <rule ref="category/apex/design.xml/ExcessiveClassLength" message="Avoid really long classes (lines of code)">
        <properties>
            <property name="minimum" value="1000"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/ExcessiveParameterList" message="Avoid long parameter lists">
        <properties>
            <property name="minimum" value="4"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/ExcessivePublicCount" message="This class has too many public methods and attributes">
        <properties>
            <property name="minimum" value="25"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssConstructorCount" message="The constructor has an NCSS line count of {0}">
        <properties>
            <property name="minimum" value="20"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssMethodCount" message="The method {0}() has an NCSS line count of {1}">
        <properties>
            <property name="minimum" value="60"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/NcssTypeCount" message="The type has an NCSS line count of {0}">
        <properties>
            <property name="minimum" value="700"/>
        </properties>
    </rule>
    <!--rule ref="category/apex/design.xml/StdCyclomaticComplexity" message="The {0} ''{1}'' has a Standard Cyclomatic Complexity of {2}.">
        <properties>
            <property name="reportLevel" value="10"/>
        </properties>
    </rule-->
    <rule ref="category/apex/design.xml/TooManyFields" message="Too many fields">
        <properties>
            <property name="maxfields" value="20"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts" message="Deeply nested if..else statements are hard to read">
        <properties>
            <property name="problemDepth" value="4"/>
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/CyclomaticComplexity" message="Cyclomatic complexity is too high"/>
    <rule ref="category/apex/design.xml/CognitiveComplexity" message="Cognitive complexity is too high"/>
    <!-- PERFORMANCE -->
    <rule ref="category/apex/performance.xml/OperationWithLimitsInLoop" message="Avoid operations in loops that may hit governor limits"/>
    <rule ref="category/apex/performance.xml/OperationWithHighCostInLoop" message="Avoid operations in loops that can impact performances"/>
    <rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap" message="Avoid directly accessing Trigger.old and Trigger.new"/>
    <rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" message="Avoid logic in triggers"/>
    <rule ref="category/apex/bestpractices.xml/AvoidGlobalModifier" message="Avoid using global modifier"/>
    <rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations" message="Avoid non-existent annotations in code"/>
    <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's"/>
    <rule ref="category/apex/performance.xml/AvoidDebugStatements" message="Avoid debug statements in production code"/>
    <rule ref="category/apex/performance.xml/AvoidNonRestrictiveQueries" message="Avoid non-restrictive queries for better performance"/>
    <rule ref="category/apex/performance.xml/EagerlyLoadedDescribeSObjectResult" message="Avoid eagerly loaded describe calls"/>
    <!-- NAMING -->
    <rule ref="category/apex/codestyle.xml/ClassNamingConventions" message="Class names should begin with an uppercase character"/>
    <rule ref="category/apex/codestyle.xml/MethodNamingConventions" message="Method name does not begin with a lower case character."/>
    <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" message="Classes should not have non-constructor methods with the same name as the class"/>
    <!-- NAMING -->
    <rule ref="category/apex/codestyle.xml/FieldNamingConventions" message="Field naming conventions should be followed ''{0}'' ''{1}'' ''{2}''">
        <properties>
            <property name="enumConstantPattern" value="[A-Z][A-Z0-9_]*"/>
            <property name="constantPattern" value="[A-Z][A-Z0-9_]*"/>
            <property name="finalPattern" value="[a-z][a-zA-Z0-9]*"/>
            <property name="staticPattern" value="[a-z][a-zA-Z0-9]*"/>
            <property name="instancePattern" value="[a-z][a-zA-Z0-9]*"/>
        </properties>
    </rule>
    <rule ref="category/apex/codestyle.xml/FormalParameterNamingConventions" message="Formal parameters should follow naming conventions"/>
    <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions" message="Local variables should follow naming conventions ''{0}'' ''{1}'' ''{2}''">
        <properties>
            <property name="finalLocalPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="localPattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule>

    <rule ref="category/apex/codestyle.xml/PropertyNamingConventions" message="Properties should follow naming conventions"/>
    <!-- TESTS -->
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts" message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call"/>
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue" message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests"/>
    <!--rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveRunAs" message="Apex unit test classes should have at least one runAs() usage"/-->
    <rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage" message="Assertions in tests should include messages"/>
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation" message="Test methods should be annotated with @isTest"/>
    <rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses" message="Test methods must be defined within test classes"/>
    <!-- SECURITY -->
    <rule ref="category/apex/security.xml/ApexSharingViolations" message="Apex classes should declare a sharing model if DML or SOQL is used"/>
    <rule ref="category/apex/security.xml/ApexInsecureEndpoint" message="Apex callouts should use encrypted communication channels"/>
    <rule ref="category/apex/errorprone.xml/ApexCSRF" message="Prevent Cross-Site Request Forgery (CSRF) attacks"/>
    <rule ref="category/apex/security.xml/ApexOpenRedirect" message="Apex classes should safely redirect to a known location"/>
    <rule ref="category/apex/security.xml/ApexSOQLInjection" message="Apex classes should escape variables merged in DML query"/>
    <rule ref="category/apex/security.xml/ApexXSSFromURLParam" message="Apex classes should escape Strings obtained from URL parameters"/>
    <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings"/>
    <rule ref="category/apex/security.xml/ApexBadCrypto" message="Apex Crypto should use random IV/key"/>
    <!-- rule ref="category/apex/security.xml/ApexCRUDViolation" message="Validate CRUD permission before SOQL/DML operation"/-->
    <rule ref="category/apex/security.xml/ApexDangerousMethods" message="Calling potentially dangerous method"/>
    <rule ref="category/apex/security.xml/ApexSuggestUsingNamedCred" message="Consider using named credentials for authenticated callouts"/>
    <!-- BRACES -->
    <rule ref="category/apex/codestyle.xml/IfStmtsMustUseBraces" message="Avoid using if statements without curly braces"/>
    <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" message="Avoid using 'while' statements without curly braces"/>
    <rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" message="Avoid using 'if...else' statements without curly braces"/>
    <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" message="Avoid using 'for' statements without curly braces"/>
    <!-- EMPTY -->
    <rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks"/>
    <rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements"/>
    <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements"/>
    <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks"/>
    <rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements."/>
    <!-- STYLE -->
    <rule ref="category/apex/codestyle.xml/OneDeclarationPerLine" message="Declare only one variable per line"/>
    <rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart" message="Field declarations should be at the start of the class"/>
    <!-- DOCUMENTATION -->
    <rule ref="category/apex/documentation.xml/ApexDoc" message="Document classes, methods, and properties that are public or global."/>
    <!-- CLARITY / BEST PRACTICES -->
    <!-- rule ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel"/-->
    <rule ref="category/apex/bestpractices.xml/UnusedLocalVariable" message="Unused Local Variable ''{0}''"/>
    <!-- rule ref="category/apex/bestpractices.xml/QueueableWithoutFinalizer"/-->
    <rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode" message="Override both equals() and hashCode() methods"/>
    <rule ref="category/apex/errorprone.xml/InaccessibleAuraEnabledGetter" message="Ensure getters in AuraEnabled classes are accessible"/>
    <!-- Visual Force -->
    <rule ref="category/visualforce/security.xml/VfCsrf" message="Prevent CSRF vulnerabilities in Visualforce pages"/>
    <rule ref="category/visualforce/security.xml/VfUnescapeEl" message="Avoid unescaping EL expressions in Visualforce"/>
</ruleset>
